// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vjftw/orchestrate/master/resolvers (interfaces: IUserResolver)

package mock

import (
	"io"

	gomock "github.com/golang/mock/gomock"
	models "github.com/vjftw/orchestrate/master/models"
)

// Mock of IUserResolver interface
type MockIUserResolver struct {
	ctrl     *gomock.Controller
	recorder *_MockIUserResolverRecorder
}

// Recorder for MockIUserResolver (not exported)
type _MockIUserResolverRecorder struct {
	mock *MockIUserResolver
}

func NewMockIUserResolver(ctrl *gomock.Controller) *MockIUserResolver {
	mock := &MockIUserResolver{ctrl: ctrl}
	mock.recorder = &_MockIUserResolverRecorder{mock}
	return mock
}

func (_m *MockIUserResolver) EXPECT() *_MockIUserResolverRecorder {
	return _m.recorder
}

func (_m *MockIUserResolver) FromRequest(_param0 *models.User, _param1 io.ReadCloser) error {
	ret := _m.ctrl.Call(_m, "FromRequest", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIUserResolverRecorder) FromRequest(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FromRequest", arg0, arg1)
}
