// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vjftw/orchestrate/master/validators (interfaces: IValidator)

package validators

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/vjftw/orchestrate/master/models"
)

// Mock of IValidator interface
type MockIValidator struct {
	ctrl     *gomock.Controller
	recorder *_MockIValidatorRecorder
}

// Recorder for MockIValidator (not exported)
type _MockIValidatorRecorder struct {
	mock *MockIValidator
}

func NewMockIValidator(ctrl *gomock.Controller) *MockIValidator {
	mock := &MockIValidator{ctrl: ctrl}
	mock.recorder = &_MockIValidatorRecorder{mock}
	return mock
}

func (_m *MockIValidator) EXPECT() *_MockIValidatorRecorder {
	return _m.recorder
}

func (_m *MockIValidator) Validate(_param0 models.IModel) bool {
	ret := _m.ctrl.Call(_m, "Validate", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockIValidatorRecorder) Validate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate", arg0)
}
