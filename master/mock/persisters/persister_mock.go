// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vjftw/orchestrate/master/persisters (interfaces: IPersister)

package persisters

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/vjftw/orchestrate/master/models"
)

// Mock of IPersister interface
type MockIPersister struct {
	ctrl     *gomock.Controller
	recorder *_MockIPersisterRecorder
}

// Recorder for MockIPersister (not exported)
type _MockIPersisterRecorder struct {
	mock *MockIPersister
}

func NewMockIPersister(ctrl *gomock.Controller) *MockIPersister {
	mock := &MockIPersister{ctrl: ctrl}
	mock.recorder = &_MockIPersisterRecorder{mock}
	return mock
}

func (_m *MockIPersister) EXPECT() *_MockIPersisterRecorder {
	return _m.recorder
}

func (_m *MockIPersister) Delete(_param0 models.IModel) error {
	ret := _m.ctrl.Call(_m, "Delete", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIPersisterRecorder) Delete(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Delete", arg0)
}

func (_m *MockIPersister) GetInto(_param0 models.IModel, _param1 interface{}, _param2 ...interface{}) error {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "GetInto", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIPersisterRecorder) GetInto(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetInto", _s...)
}

func (_m *MockIPersister) Save(_param0 models.IModel) error {
	ret := _m.ctrl.Call(_m, "Save", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockIPersisterRecorder) Save(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Save", arg0)
}
