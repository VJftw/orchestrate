// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vjftw/orchestrate/master/providers (interfaces: IUserProvider)

package mocks

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/vjftw/orchestrate/master/models"
)

// Mock of IUserProvider interface
type MockIUserProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockIUserProviderRecorder
}

// Recorder for MockIUserProvider (not exported)
type _MockIUserProviderRecorder struct {
	mock *MockIUserProvider
}

func NewMockIUserProvider(ctrl *gomock.Controller) *MockIUserProvider {
	mock := &MockIUserProvider{ctrl: ctrl}
	mock.recorder = &_MockIUserProviderRecorder{mock}
	return mock
}

func (_m *MockIUserProvider) EXPECT() *_MockIUserProviderRecorder {
	return _m.recorder
}

func (_m *MockIUserProvider) New() *models.User {
	ret := _m.ctrl.Call(_m, "New")
	ret0, _ := ret[0].(*models.User)
	return ret0
}

func (_mr *_MockIUserProviderRecorder) New() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "New")
}
