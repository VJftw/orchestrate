// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vjftw/orchestrate/commander/validators (interfaces: IUser)

package validators

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/vjftw/orchestrate/commander/models"
)

// Mock of IUser interface
type MockIUser struct {
	ctrl     *gomock.Controller
	recorder *_MockIUserRecorder
}

// Recorder for MockIUser (not exported)
type _MockIUserRecorder struct {
	mock *MockIUser
}

func NewMockIUser(ctrl *gomock.Controller) *MockIUser {
	mock := &MockIUser{ctrl: ctrl}
	mock.recorder = &_MockIUserRecorder{mock}
	return mock
}

func (_m *MockIUser) EXPECT() *_MockIUserRecorder {
	return _m.recorder
}

func (_m *MockIUser) Validate(_param0 *models.User) bool {
	ret := _m.ctrl.Call(_m, "Validate", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockIUserRecorder) Validate(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Validate", arg0)
}
