// Automatically generated by MockGen. DO NOT EDIT!
// Source: github.com/vjftw/orchestrate/commander/providers (interfaces: IAuthToken)

package providers

import (
	gomock "github.com/golang/mock/gomock"
	models "github.com/vjftw/orchestrate/commander/models"
	ephemeral "github.com/vjftw/orchestrate/commander/models/ephemeral"
)

// Mock of IAuthToken interface
type MockIAuthToken struct {
	ctrl     *gomock.Controller
	recorder *_MockIAuthTokenRecorder
}

// Recorder for MockIAuthToken (not exported)
type _MockIAuthTokenRecorder struct {
	mock *MockIAuthToken
}

func NewMockIAuthToken(ctrl *gomock.Controller) *MockIAuthToken {
	mock := &MockIAuthToken{ctrl: ctrl}
	mock.recorder = &_MockIAuthTokenRecorder{mock}
	return mock
}

func (_m *MockIAuthToken) EXPECT() *_MockIAuthTokenRecorder {
	return _m.recorder
}

func (_m *MockIAuthToken) NewFromUser(_param0 *models.User) (*ephemeral.AuthToken, error) {
	ret := _m.ctrl.Call(_m, "NewFromUser", _param0)
	ret0, _ := ret[0].(*ephemeral.AuthToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockIAuthTokenRecorder) NewFromUser(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "NewFromUser", arg0)
}
